version: "3.8"

services:
  gateway:
    build: ./backend/gateway
    restart: always
    hostname: gateway
    container_name: Gateway
    volumes:
      - ./backend/gateway:/app/gateway
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
      - "9230:9230"
    networks:
      - backend
      # - frontend
    depends_on:
      - redis
      - database
    command: yarn run start:debug

  auth:
    build: ./backend/auth
    restart: always
    hostname: auth
    container_name: Auth
    volumes:
      - ./backend/auth:/app//auth
    env_file:
      - ./backend/.env
    ports:
      - "9231:9231"
    networks:
      - backend
    depends_on:
      - redis
      - database
    command: yarn run start:debug

  company:
    build: ./backend/company
    restart: always
    hostname: company
    container_name: Company
    volumes:
      - ./backend/company:/app/company
    env_file:
      - ./backend/.env
    ports:
      - "9232:9232"
    networks:
      - backend
    depends_on:
      - redis
      - database
    command: yarn run start:debug

  job:
    build: ./backend/job
    restart: always
    hostname: job
    container_name: Job
    volumes:
      - ./backend/job:/app/job
    env_file:
      - ./backend/.env
    ports:
      - "9233:9233"
    networks:
      - backend
    depends_on:
      - redis
      - database
    command: yarn run start:debug

  language:
    build: ./backend/language
    restart: always
    hostname: language
    container_name: Language
    volumes:
      - ./backend/language:/app/language
    env_file:
      - ./backend/.env
    ports:
      - "9234:9234"
    networks:
      - backend
    depends_on:
      - redis
      - database
    command: yarn run start:debug

  search:
    build: ./backend/search
    restart: always
    hostname: search
    container_name: Search
    volumes:
      - ./backend/search:/app/search
    env_file:
      - ./backend/.env
    ports:
      - "9235:9235"
    networks:
      - backend
    depends_on:
      - redis
      - database
    command: yarn run start:debug

  # permission:
  #   build: ./backend/permission
  #   restart: always
  #   hostname: permission
  #   container_name: Permisstion
  #   volumes:
  #     - ./permission:/app/permission
  #   env_file:
  #     - ./backend/.env
  #   ports:
  #     - "9236:9236"
  #   networks:
  #     - backend
  #   depends_on:
  #     - redis
  #     - database
  #   command: yarn run start:debug

  # mailer:
  #   build: ./backend/mailer
  #   restart: always
  #   hostname: mailer
  #   container_name: Mailer
  #   volumes:
  #     - ./backend/mailer:/app/mailer
  #   env_file:
  #     - ./backend/.env
  #   ports:
  #     - "9237:9237"
  #   networks:
  #     - backend
  #   depends_on:
  #     - redis
  #     - database
  #   command: yarn run start:debug

  redis:
    image: "redis:alpine"
    container_name: Redis
    hostname: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./backend/redis/data:/data
      - ./backend/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      - backend

  database:
    image: "mongo"
    restart: always
    hostname: mongo
    container_name: Database
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - "./database/data/db:/data/db"
      - "./database/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 27017:27017
    networks:
      - backend

networks:
  backend:
    driver: bridge
  # frontend:
  #   external:
  #     name: infrastructure
